import { Decimal } from 'decimal.js';

/**
 * Enumeration of supported data types for object and relation properties.
 * This enum defines the set of primitive data types that can be used when
 * defining properties for ObjectTypeDefinition and RelationTypeDefinition.
 * These types guide data validation and storage.
 */
export enum PropertyDataType {
  /** A string of text. */
  TEXT = 'TEXT',

  /** A whole number. */
  INTEGER = 'INTEGER',

  /** A floating-point number. */
  FLOAT = 'FLOAT',

  /** A true or false value. */
  BOOLEAN = 'BOOLEAN',

  /** A date and time value, typically stored in UTC. */
  DATETIME = 'DATETIME',

  /** Binary Large Object, for storing raw binary data. */
  BLOB = 'BLOB',

  /** A JSON object or array, for semi-structured data. */
  JSON = 'JSON',

  /** A universally unique identifier. */
  UUID = 'UUID',
}

/**
 * Defines the logical operators for combining query clauses.
 */
export enum LogicalOperator {
  /** Logical AND operation. */
  AND = 'AND',

  /** Logical OR operation. */
  OR = 'OR',
}

/**
 * Type definition for RelationalFilter value
 * Represents the possible value types that can be used in filter conditions.
 */
export type FilterValueType =
  | string
  | number
  | boolean
  | null
  | Date
  | Decimal
  | string[]
  | number[]
  | boolean[]
  | Date[]
  | Decimal[];

/**
 * Literal type for relational filter operators.
 */
export type RelationalOperator =
  | '=='
  | '!='
  | '>'
  | '<'
  | '>='
  | '<='
  | 'LIKE'
  | 'IN'
  | 'CONTAINS'
  | 'STARTSWITH'
  | 'ENDSWITH';

/**
 * Literal type for graph traversal directions.
 */
export type GraphTraversalDirection = 'outgoing' | 'incoming';

/**
 * Common interface for all storable instances with metadata.
 * This provides common fields like id, weight, and upsert timestamp.
 */
export interface MemoryInstance {
  /** A unique identifier for the instance, generated by default. */
  id: string;

  /** A decimal value between 0 and 10 (inclusive) representing importance/relevance. */
  weight: Decimal;

  /** The timestamp (UTC) when the instance was last created or updated. */
  upsert_date: Date;
}